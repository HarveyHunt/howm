.TH "op.h" 3 "Sun Nov 30 2014" "howm" \" -*- nroff -*-
.ad l
.nh
.SH NAME
op.h \- 
.PP
howm  

.SH SYNOPSIS
.br
.PP
\fC#include <xcb/xcb\&.h>\fP
.br

.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmotions\fP { \fBCLIENT\fP, \fBWORKSPACE\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBop_kill\fP (const unsigned int type, int cnt)"
.br
.RI "\fIAn operator that kills an arbitrary amount of clients or workspaces\&. \fP"
.ti -1c
.RI "void \fBop_move_up\fP (const unsigned int type, int cnt)"
.br
.RI "\fIMove client/s up\&. \fP"
.ti -1c
.RI "void \fBop_move_down\fP (const unsigned int type, int cnt)"
.br
.RI "\fIMove client/s down\&. \fP"
.ti -1c
.RI "void \fBop_focus_down\fP (const unsigned int type, int cnt)"
.br
.RI "\fIOperator function to move the current focus down\&. \fP"
.ti -1c
.RI "void \fBop_focus_up\fP (const unsigned int type, int cnt)"
.br
.RI "\fIOperator function to move the current focus up\&. \fP"
.ti -1c
.RI "void \fBop_shrink_gaps\fP (const unsigned int type, int cnt)"
.br
.RI "\fIAn operator to shrink the gaps of either workspaces or clients by conf\&.op_gap_size\&. \fP"
.ti -1c
.RI "void \fBop_grow_gaps\fP (const unsigned int type, int cnt)"
.br
.RI "\fIAn operator to grow the gaps of either workspaces or clients by conf\&.op_gap_size\&. \fP"
.ti -1c
.RI "void \fBop_cut\fP (const unsigned int type, int cnt)"
.br
.RI "\fICut one or more clients and add them onto howm's delete register stack (if there is space)\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
howm 


.PP
\fBAuthor:\fP
.RS 4
Harvey Hunt
.RE
.PP
\fBDate:\fP
.RS 4
2014 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBmotions\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICLIENT \fP\fP
.TP
\fB\fIWORKSPACE \fP\fP
.SH "Function Documentation"
.PP 
.SS "void op_cut (const unsigned inttype, intcnt)"

.PP
Cut one or more clients and add them onto howm's delete register stack (if there is space)\&. A segment of howm's internal client list is taken and placed onto the delete register stack\&. All clients from the list segment must be unmapped and the remaining clients must be refocused\&.
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Whether to cut an entire workspace or client\&. 
.br
\fIcnt\fP The amount of clients or workspaces to cut\&. 
.RE
.PP

.SS "void op_focus_down (const unsigned inttype, intcnt)"

.PP
Operator function to move the current focus down\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Whether to focus on clients or workspaces\&. 
.br
\fIcnt\fP The number of times to move focus\&. 
.RE
.PP

.SS "void op_focus_up (const unsigned inttype, intcnt)"

.PP
Operator function to move the current focus up\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Whether to focus on clients or workspaces\&. 
.br
\fIcnt\fP The number of times to move focus\&. 
.RE
.PP

.SS "void op_grow_gaps (const unsigned inttype, intcnt)"

.PP
An operator to grow the gaps of either workspaces or clients by conf\&.op_gap_size\&. When the type is workspace, the gap size for that workspace is also changed\&. This means that new windows will be spawned in with the modified gap size\&.
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Whether the operation should be performed on a client or workspace\&. 
.br
\fIcnt\fP The amount of clients or workspaces to perform the operation on\&. 
.RE
.PP

.SS "void op_kill (const unsigned inttype, intcnt)"

.PP
An operator that kills an arbitrary amount of clients or workspaces\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Whether to kill workspaces or clients\&. 
.br
\fIcnt\fP How many workspaces or clients to kill\&. 
.RE
.PP

.SS "void op_move_down (const unsigned inttype, intcnt)"

.PP
Move client/s down\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP We don't support moving workspaces, so this should only be client\&. 
.br
\fIcnt\fP How many clients to move\&. 
.RE
.PP

.SS "void op_move_up (const unsigned inttype, intcnt)"

.PP
Move client/s up\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP We don't support moving workspaces, so this should only be client\&. 
.br
\fIcnt\fP How many clients to move\&. 
.RE
.PP

.SS "void op_shrink_gaps (const unsigned inttype, intcnt)"

.PP
An operator to shrink the gaps of either workspaces or clients by conf\&.op_gap_size\&. When the type is workspace, the gap size for that workspace is also changed\&. This means that new windows will be spawned in with the modified gap size\&.
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Whether the operation should be performed on a client or workspace\&. 
.br
\fIcnt\fP The amount of clients or workspaces to perform the operation on\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for howm from the source code\&.
