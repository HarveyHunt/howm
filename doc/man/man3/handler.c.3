.TH "handler.c" 3 "Sun Nov 30 2014" "howm" \" -*- nroff -*-
.ad l
.nh
.SH NAME
handler.c \- 
.PP
Handle the X events generated by clients that howm is managing\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <xcb/xcb\&.h>\fP
.br
\fC#include <xcb/xcb_ewmh\&.h>\fP
.br
\fC#include <xcb/xcb_icccm\&.h>\fP
.br
\fC#include <X11/keysym\&.h>\fP
.br
\fC#include 'handler\&.h'\fP
.br
\fC#include 'command\&.h'\fP
.br
\fC#include 'client\&.h'\fP
.br
\fC#include 'op\&.h'\fP
.br
\fC#include 'howm\&.h'\fP
.br
\fC#include 'helper\&.h'\fP
.br
\fC#include 'workspace\&.h'\fP
.br
\fC#include 'xcb_help\&.h'\fP
.br
\fC#include 'layout\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBenter_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIThe event that occurs when the mouse pointer enters a window\&. \fP"
.ti -1c
.RI "static void \fBdestroy_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIThe handler for destroy events\&. \fP"
.ti -1c
.RI "static void \fBbutton_press_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIProcess a button press\&. \fP"
.ti -1c
.RI "static void \fBmap_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIHandles mapping requests\&. \fP"
.ti -1c
.RI "static void \fBconfigure_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIDeal with a window's request to change its geometry\&. \fP"
.ti -1c
.RI "static void \fBunmap_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIRemove clients that wish to be unmapped\&. \fP"
.ti -1c
.RI "static void \fBclient_message_event\fP (xcb_generic_event_t *ev)"
.br
.RI "\fIHandle messages sent by the client to alter its state\&. \fP"
.ti -1c
.RI "static void \fBunhandled_event\fP (xcb_generic_event_t *ev)"
.br
.ti -1c
.RI "void \fBhandle_event\fP (xcb_generic_event_t *ev)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Handle the X events generated by clients that howm is managing\&. 


.PP
\fBAuthor:\fP
.RS 4
Harvey Hunt
.RE
.PP
\fBDate:\fP
.RS 4
2014 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "static void button_press_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
Process a button press\&. 
.PP
\fBParameters:\fP
.RS 4
\fIev\fP The button press event\&. 
.RE
.PP

.SS "static void client_message_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
Handle messages sent by the client to alter its state\&. 
.PP
\fBParameters:\fP
.RS 4
\fIev\fP The client message as a generic event\&. 
.RE
.PP

.SS "static void configure_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
Deal with a window's request to change its geometry\&. 
.PP
\fBParameters:\fP
.RS 4
\fIev\fP The event sent from the window\&. 
.RE
.PP

.SS "static void destroy_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
The handler for destroy events\&. Used when a window sends a destroy event, signalling that it wants to be unmapped\&. The client that the window belongs to is then removed from the client list for its repective workspace\&.
.PP
\fBParameters:\fP
.RS 4
\fIev\fP The destroy event\&. 
.RE
.PP

.SS "static void enter_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
The event that occurs when the mouse pointer enters a window\&. 
.PP
\fBParameters:\fP
.RS 4
\fIev\fP The enter event\&. 
.RE
.PP

.SS "void handle_event (xcb_generic_event_t *ev)"

.SS "static void map_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
Handles mapping requests\&. When an X window wishes to be displayed, it send a mapping request\&. This function processes that mapping request and inserts the new client (created from the map requesting window) into the list of clients for the current workspace\&.
.PP
\fBParameters:\fP
.RS 4
\fIev\fP A mapping request event\&. 
.RE
.PP

.SS "static void unhandled_event (xcb_generic_event_t *ev)\fC [static]\fP"

.SS "static void unmap_event (xcb_generic_event_t *ev)\fC [static]\fP"

.PP
Remove clients that wish to be unmapped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIev\fP An event letting us know which client should be unmapped\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for howm from the source code\&.
