.TH "md_CONTRIBUTING" 3 "Sun Nov 30 2014" "howm" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_CONTRIBUTING \- Contributing 
Contributions are always welcomed, so start sending some PRs!
.PP
.SS "Getting Started"
.PP
Clone the repository: 
.PP
.nf
git clone https://github.com/HarveyHunt/howm.git

.fi
.PP
.PP
Change to the develop branch: 
.PP
.nf
git checkout develop

.fi
.PP
.PP
You might find it useful to have the generated Doxygen docs handy\&. They are hosted on github \fChere\fP\&.
.PP
Alternatively, change into the newly cloned howm directory and run: 
.PP
.nf
doxygen

.fi
.PP
.PP
To have the documentation automatically generated locally\&.
.PP
Then it is time to hack away until your heart is content\&.
.PP
.SS "Tools of the trade"
.PP
It's important to have some tools to test howm with\&. I like to use \fCXephyr\fP and \fCx11trace\fP\&.
.PP
Xephyr is an X server in a window and makes it easy to test howm without having to change to a different X server\&. I invoke Xephyr using the following command: 
.PP
.nf
Xephyr -ac -br -screen 1024x768 :1

.fi
.PP
.PP
Then I change into the directory that howm is in and run the following: 
.PP
.nf
DISPLAY=:1 gdb howm

.fi
.PP
.PP
x11trace is used for seeing the communication between an X server and its clients\&. This is useful when trying to track down bugs involving communication with X clients as well as implementing EWMH compliance\&. For normal development, it isn't necessary to use x11trace\&.
.PP
.SS "Code Style"
.PP
I try to follow the \fCLinux Kernel Guide\fP as closely as sanely possible\&.
.PP
I run checkpatch\&.pl from the Linux Kernel against the code and strive for no errors- you should do the same\&.
.PP
Running a code linter, such as \fCSplint\fP is always a good idea- try to minimise errors\&.
.PP
The hard rules are as follows:
.PP
.IP "\(bu" 2
Use tabs for indentation (that are equivalent to 8 spaces in size)\&.
.IP "\(bu" 2
use_of_underscores_for_functions_variables_etc
.IP "\(bu" 2
Code should be clear- clarity over conciseness
.IP "\(bu" 2
Doxygen documentation needs to be updated for new code
.IP "\(bu" 2
Document new features in the README
.PP
.PP
.SS "What comes after code?"
.PP
You have written an awesome new feature and want to get it merged straight away- have you forgotten something?
.PP
Documentation is an important part of any project, howm is no different\&. Document all new features, as has been done in the README already\&.
.PP
Please don't change any version numbers anywhere within the project\&.
.PP
howm uses \fCDoxygen\fP for documentation of the code, keep this up to date as you go\&.
.PP
If you add new #defines to the config file, it might be a good idea to add some _Static_assert()s to correct users if they enter illegal values in the config file\&.
.PP
.SS "Sending PRs"
.PP
Once you have made some cool changes, push to github and send a PR\&.
.PP
Make sure that the PR is targeted at the develop branch, as packages are built from the master branch and that should be kept as stable as possible\&. 
